import{v as e,o as t,g as i,q as a,j as s}from"./framework.e2adc984.js";import{B as n,d as r,R as o,D as h,b as l,S as c,W as d,C as m,e as u}from"./three.82dd7a2c.js";const f={id:"waves"},v={setup(a){class s{constructor(){this.renderParam={clearColor:6710886,width:window.innerWidth,height:window.innerHeight},this.cameraParam={left:-1,right:1,top:1,bottom:1,near:0,far:-1},this.scene=null,this.camera=null,this.renderer=null,this.geometry=null,this.material=null,this.mesh=null,this.isInitialized=!1}init(){this._setScene(),this._setRender(),this._setCamera(),this.isInitialized=!0}_setScene(){this.scene=new c}_setRender(){this.renderer=new d({canvas:document.getElementById("waves")}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setClearColor(new m(this.renderParam.clearColor)),this.renderer.setSize(this.renderParam.width,this.renderParam.height)}_setCamera(){this.isInitialized||(this.camera=new u(this.cameraParam.left,this.cameraParam.right,this.cameraParam.top,this.cameraParam.bottom,this.cameraParam.near,this.cameraParam.far));const e=window.innerWidth,t=window.innerHeight;this.camera.aspect=e/t,this.camera.updateProjectionMatrix(),this.renderer.setSize(e,t)}_render(){this.renderer.render(this.scene,this.camera)}onResize(){this._setCamera()}onRaf(){this._render()}}class v{constructor(e){this.canvas=document.getElementById("waves"),this.canvasWidth=this.canvas.width,this.canvasHeight=this.canvas.height,this.uniforms={resolution:{type:"v2",value:[this.canvasWidth,this.canvasHeight]},time:{type:"f",value:0},xScale:{type:"f",value:1},yScale:{type:"f",value:.5},distortion:{type:"f",value:.05}},this.stage=e,this.mesh=null,this.xScale=3,this.yScale=.7,this.distortion=.1}init(){this._setMesh(),this._setGui()}_setMesh(){const e=new n(new Float32Array([-1,-1,0,1,-1,0,-1,1,0,1,-1,0,-1,1,0,1,1,0]),3),t=new r;t.setAttribute("position",e);const i=new o({vertexShader:"\nattribute vec3 position;\n\nvoid main()\t{\n  gl_Position = vec4(position, 1.0);\n}\n",fragmentShader:"\nprecision highp float;\nuniform vec2 resolution;\nuniform float time;\nuniform float xScale;\nuniform float yScale;\nuniform float distortion;\n\nvoid main() {\n  vec2 p = (gl_FragCoord.xy * 2.0 - resolution) / min(resolution.x, resolution.y);\n  \n  float d = length(p) * distortion;\n  \n  float rx = p.x * (1.0 + d);\n  float gx = p.x;\n  float bx = p.x * (1.0 - d);\n\n  float r = 0.05 / abs(p.y + sin((rx + time) * xScale) * yScale);\n  float g = 0.05 / abs(p.y + sin((gx + time) * xScale) * yScale);\n  float b = 0.05 / abs(p.y + sin((bx + time) * xScale) * yScale);\n  \n  gl_FragColor = vec4(r, g, b, 1.0);\n}\n",uniforms:this.uniforms,side:h});this.mesh=new l(t,i),this.stage.scene.add(this.mesh)}_render(){this.uniforms.time.value+=.01}_setGui(){this.xScale,this.yScale,this.distortion}onRaf(){this._render()}}return e((()=>{const e=new s;e.init();const t=new v(e);t.init(),window.addEventListener("resize",(()=>{e.onResize()}));const i=()=>{window.requestAnimationFrame((()=>{e.onRaf(),t.onRaf(),i()}))};i()})),(e,a)=>(t(),i("canvas",f))}},p='{"title":"Waves","description":"","frontmatter":{"title":"Waves","source":"https://codepen.io/Web_yuki1027/pen/yLgYpWM"},"relativePath":"exp/waves.md","lastUpdated":1624396244024}',w={},g=s("p",null,[s("a",{href:"/"},"back")],-1);w.render=function(e,s,n,r,o,h){const l=v;return t(),i("div",null,[g,a(l)])};export{p as __pageData,w as default};
